name: Deploy Preview

env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    NEON_DATABASE_USERNAME: ${{ secrets.NEON_DATABASE_USERNAME }}
    NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
    NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
    workflow_dispatch:

jobs:
    checks:
        uses: ./.github/workflows/checks-template.yaml

    deploy:
        runs-on: ubuntu-latest
        permissions: write-all
        needs: checks
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup
              uses: ./.github/setup

            - name: Get branch name
              id: branch-name
              uses: tj-actions/branch-names@v8

            - name: Create Neon Branch
              id: create-branch
              uses: neondatabase/create-branch-action@v4
              with:
                  project_id: ${{ env.NEON_PROJECT_ID }}
                  parent: master
                  # fix number
                  branch_name: preview/pr-${{ steps.branch-name.outputs.current_branch }}
                  username: ${{ env.NEON_DATABASE_USERNAME }}
                  api_key: ${{ env.NEON_API_KEY }}

            - name: Run Migrations
              run: |
                  touch .env

                  echo DATABASE_URL=${{ steps.create-branch.outputs.db_url_with_pooler }}?sslmode=require >> .env

                  pnpm run db:migrate

            - name: Install Vercel CLI
              run: pnpm install --global vercel@latest

            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=preview --token=${{ env.VERCEL_TOKEN }}

            - name: Build Project Artifacts
              run: vercel build --token=${{ env.VERCEL_TOKEN }} --mode preview

            - name: Deploy Preview to Vercel
              id: deploy
              run: echo preview_url=$(vercel deploy --prebuilt --token=${{ env.VERCEL_TOKEN }}) >> $GITHUB_OUTPUT
